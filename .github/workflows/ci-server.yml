name: "CI-Server"

on: [push, pull_request]

jobs:
  server-nose:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.10']
    env:
      INSTALL_PY_MODULES: true
      RUN_SERVICES: true
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
          cache-dependency-path: 'server/requirements.txt'
      - name: Setup Environment
        run: ./scripts/ci-install.sh
      - name: Start Services
        run: ./scripts/ci-start-services.sh
      - name: Pytest
        run: pytest --log-level=ERROR --disable-warnings server/planning
  server-behave:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.10']
    env:
      INSTALL_PY_MODULES: true
      RUN_SERVICES: true
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
          cache-dependency-path: 'server/requirements.txt'
      - name: Setup Environment
        run: ./scripts/ci-install.sh
      - name: Start Services
        run: ./scripts/ci-start-services.sh
      - name: Behave
        working-directory: ./server
        run: behave --format progress2 --logging-level=ERROR

  prodapi:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.10']
    env:
      INSTALL_PY_MODULES: true
      INSTALL_PY_EDITABLE: true
      RUN_SERVICES: true
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
          cache-dependency-path: 'server/requirements.txt'
      - name: Setup Environment
        run: ./scripts/ci-install.sh
      - name: Start Services
        run: ./scripts/ci-start-services.sh
      - name: Pytest
        run: pytest --log-level=ERROR --disable-warnings server/tests/prod_api
